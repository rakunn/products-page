{"version":3,"sources":["store/actions/form.ts","pages/Home/Home.tsx","components/DataInput/CSVFileInput.tsx","components/DataInput/CSVManualInput.tsx","components/DataInput/staticData.ts","components/DataInput/DataInput.tsx","components/DataOutput/ProductChart.tsx","components/DataOutput/ProductTable.tsx","components/DataOutput/UserFact.tsx","components/DataOutput/DataOutput.tsx","components/App.tsx","reportWebVitals.ts","store/reducers/form.ts","store/index.ts","index.tsx"],"names":["FormActionNames","AvailablePages","CSVFileInput","setData","buttonRef","createRef","useState","file","setFile","handleOpenDialog","e","current","open","gutter","span","size","value","name","placeholder","readOnly","ref","onFileLoad","data","onError","noClick","noDrag","onRemoveFile","noProgressBar","type","onClick","block","StyledTextArea","styled","Input","TextArea","CSVManualInput","rows","onBlur","parsedResult","readString","target","cities","countries","PLACEHOLDER","DataInput","setSelectedPage","dispatch","useDispatch","useSelector","state","form","email","gender","country","age","city","style","padding","Title","level","initialValues","onFinish","values","payload","SUBMIT_FORM_ACTION","OUTPUT_PAGE","onFinishFailed","Group","Item","rules","required","message","Option","Array","fill","undefined","map","_","i","htmlType","disabled","length","ProductChart","config","input","row","product","parseFloat","convertToChartData","autoFit","yField","xField","point","shape","label","onReady","chartInstance","columns","title","dataIndex","key","sorter","a","b","price","convertToTableData","Container","div","ProductTable","dataSource","showHeader","Text","Typography","UserFact","strong","PageContainer","DataOutput","Header","Layout","Content","Home","INPUT_PAGE","selectedPage","display","justifyContent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dda49c4f.chunk.js","sourcesContent":["import { FormState } from '../reducers/form';\n\nexport enum FormActionNames {\n  SUBMIT_FORM_ACTION = 'SUBMIT_FORM',\n}\n\nexport type SubmitFormAction = {\n  type: FormActionNames.SUBMIT_FORM_ACTION;\n  payload: FormState;\n};\n\nexport type FormAction = SubmitFormAction;\n\nexport const submitFormActionCreator = (\n  payload: FormState\n): SubmitFormAction => {\n  return {\n    type: FormActionNames.SUBMIT_FORM_ACTION,\n    payload,\n  };\n};\n","import { Button, Layout } from 'antd';\nimport ButtonGroup from 'antd/es/button/button-group';\nimport React, { useState } from 'react';\nimport { DataInput } from '../../components/DataInput/DataInput';\nimport { DataOutput } from '../../components/DataOutput/DataOutput';\n\nconst { Header, Content } = Layout;\n\nexport enum AvailablePages {\n  INPUT_PAGE = 'INPUT_PAGE',\n  OUTPUT_PAGE = 'OUTPUT_PAGE',\n}\n\nexport const Home = () => {\n  const [selectedPage, setSelectedPage] = useState<AvailablePages>(\n    AvailablePages.INPUT_PAGE\n  );\n\n  const handleNavigateToInputPage = () => {\n    setSelectedPage(AvailablePages.INPUT_PAGE);\n  };\n\n  const handleNavigateToOutputPage = () => {\n    setSelectedPage(AvailablePages.OUTPUT_PAGE);\n  };\n\n  return (\n    <Layout>\n      <Header>\n        <ButtonGroup style={{ display: 'flex', justifyContent: 'center' }}>\n          <Button onClick={handleNavigateToInputPage}>Input</Button>\n          <Button onClick={handleNavigateToOutputPage}>Output</Button>\n        </ButtonGroup>\n      </Header>\n      <Content>\n        {selectedPage === AvailablePages.INPUT_PAGE && (\n          <DataInput setSelectedPage={setSelectedPage} />\n        )}\n        {selectedPage === AvailablePages.OUTPUT_PAGE && <DataOutput />}\n      </Content>\n    </Layout>\n  );\n};\n","import { createRef, Dispatch, useState } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport { Button, Col, Input, Row } from 'antd';\nimport { ParsedCSV } from '../../store/reducers/form';\n\nconst PLACEHOLDER = 'Upload file ...';\n\ninterface CSVFileInputProps {\n  setData: Dispatch<ParsedCSV>;\n}\n\nexport const CSVFileInput: React.FC<CSVFileInputProps> = ({ setData }) => {\n  const buttonRef = createRef<any>();\n\n  const [file, setFile] = useState<File | null>();\n\n  const handleOpenDialog = (e: any) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = (data: ParsedCSV, file: File) => {\n    setFile(file);\n    setData(data);\n  };\n\n  const handleOnError = () => {\n    // TODO possible enhancement\n  };\n\n  const handleOnRemoveFile = () => {\n    // TODO possible enhancement\n  };\n\n  return (\n    <Row gutter={8}>\n      <Col span={16}>\n        <Input\n          size={'large'}\n          value={file ? file.name : ''}\n          placeholder={PLACEHOLDER}\n          readOnly={true}\n        />\n      </Col>\n      <Col span={8}>\n        <CSVReader\n          ref={buttonRef}\n          onFileLoad={handleOnFileLoad}\n          onError={handleOnError}\n          noClick\n          noDrag\n          onRemoveFile={handleOnRemoveFile}\n          noProgressBar={true}\n        >\n          {() => (\n            <Button\n              type=\"primary\"\n              onClick={handleOpenDialog}\n              size={'large'}\n              block={true}\n            >\n              Browse file\n            </Button>\n          )}\n        </CSVReader>\n      </Col>\n    </Row>\n  );\n};\n","import { Col, Input, Row } from 'antd';\nimport { ChangeEvent, Dispatch } from 'react';\nimport { readString } from 'react-papaparse';\nimport styled from 'styled-components/macro';\nimport { ParsedCSV } from '../../store/reducers/form';\n\nconst StyledTextArea = styled(Input.TextArea)`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\ninterface CSVManualInputProps {\n  setData: Dispatch<ParsedCSV>;\n}\n\nexport const CSVManualInput: React.FC<CSVManualInputProps> = ({ setData }) => {\n  const parseValue = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const parsedResult = readString(e.target.value);\n    setData(parsedResult.data as ParsedCSV);\n  };\n  return (\n    <Row gutter={8}>\n      <Col span={24}>\n        <StyledTextArea rows={8} onBlur={parseValue} />\n      </Col>\n    </Row>\n  );\n};\n","export const cities = [\n  'AMSTERDAM',\n  'ATHINAI (Athens)',\n  'BEOGRAD (Belgrade)',\n  'BERLIN',\n  'BUCURESTI (Bucharest)',\n  'BUDAPEST',\n  'Barcelona',\n  'Barnaul',\n  'Birmingham',\n  'Bremen',\n  'Chelyabinsk',\n  'Dnepropetrovsk',\n  'Donetsk',\n  'Dortmund',\n  'Duisburg',\n  'Düsseldorf',\n  'Ekaterinoburg',\n  'Essen',\n  'Frankfurt am Main',\n  'Genova',\n  'Glasgow',\n  'HELSINKI',\n  'Hamburg',\n  'Hannover',\n  'Irkutsk',\n  'Izhevsk',\n  'KIEV',\n  'KISHINEV',\n  'KOBENHAVN (Copenhagen)',\n  'Kazan',\n  'Kemerovo',\n  'Khabarovsk',\n  'Kharkov',\n  'Kraków',\n  'Krasnodar',\n  'Krasnoyarsk',\n  'Kryvy Rig',\n  'Köln (Cologne)',\n  'LISBOA (Lisbon)',\n  'LONDON',\n  'Leeds',\n  'Lipetsk',\n  'Lvov',\n  'Lódz',\n  'MADRID',\n  'MINSK',\n  'MOSKVA (Moscow)',\n  'Marseille',\n  'Milano (Milan)',\n  'Mykolaiv',\n  'Málaga',\n  'München (Munich)',\n  'Naberezhnye Tchelny',\n  'Napoli (Naples)',\n  'Nizhny Novgorod',\n  'Novokuznetsk',\n  'Novosibirsk',\n  'OSLO',\n  'Odessa',\n  'Omsk',\n  'Orenburg',\n  'PARIS',\n  'PRAHA (Prague)',\n  'Palermo',\n  'Penza',\n  'Perm',\n  'Poznan',\n  'RIGA',\n  'ROMA',\n  'Rostov-na-Donu',\n  'Rotterdam',\n  'Ryazan',\n  'SARAJEVO',\n  'SOFIA',\n  'STOCKHOLM',\n  'Salonika',\n  'Samara',\n  'Saratov',\n  'Sevilla',\n  'Sheffield',\n  'St Petersburg',\n  'Stuttgart',\n  'Tolyatti',\n  'Torino (Turin)',\n  'Tula',\n  'Tyumen',\n  'Ufa',\n  'Ulyanovsk',\n  'VILNIUS',\n  'Valencia',\n  'Vladivostok',\n  'Volgograd',\n  'Voronezh',\n  'WARSZAWA (Warsaw)',\n  'WIEN (Vienna)',\n  'Wroclaw (Breslau)',\n  'Yaroslave',\n  'ZAGREB',\n  'Zaporozhye',\n  'Zaragoza',\n];\n\nexport const countries = [\n  'Austria',\n  'Belarus',\n  'Bosnia',\n  'Bulgaria',\n  'Croatia',\n  'Czech Republic',\n  'Denmark',\n  'Finland',\n  'France',\n  'Germany',\n  'Greece',\n  'Hungary',\n  'Italy',\n  'Latvia',\n  'Lithuania',\n  'Moldova',\n  'Netherlands',\n  'Norway',\n  'Poland',\n  'Portugal',\n  'Romania',\n  'Russia',\n  'Serbia',\n  'Spain',\n  'Sweden',\n  'UK',\n  'Ukraine',\n];\n","import { Col, Form, Input, Button, Select, Row, Typography } from 'antd';\nimport { Dispatch, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AvailablePages } from '../../pages/Home/Home';\nimport { AppState } from '../../store';\nimport { submitFormActionCreator } from '../../store/actions/form';\nimport { ParsedCSV } from '../../store/reducers/form';\nimport { CSVFileInput } from './CSVFileInput';\nimport { CSVManualInput } from './CSVManualInput';\nimport { cities, countries } from './staticData';\n\nconst PLACEHOLDER = 'Please select ...';\n\ninterface DataInputProps {\n  setSelectedPage: Dispatch<AvailablePages>;\n}\n\nexport const DataInput: React.FC<DataInputProps> = ({ setSelectedPage }) => {\n  const dispatch = useDispatch();\n\n  const { name, email, gender, country, age, city } = useSelector(\n    (state: AppState) => state.form\n  );\n\n  const [data, setData] = useState<ParsedCSV>([]);\n\n  const onFinish = (values: AppState['form']) => {\n    dispatch(submitFormActionCreator({ ...values, data }));\n    setSelectedPage(AvailablePages.OUTPUT_PAGE);\n  };\n\n  const onFinishFailed = () => {\n    // TODO possible enhancement\n  };\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <Typography.Title level={5}>User</Typography.Title>\n      <Form\n        name=\"basic\"\n        initialValues={{ name, email, gender, country, age, city }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Input.Group size=\"large\">\n          <Row gutter={8}>\n            <Col span={16}>\n              <Form.Item name=\"name\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={4}>\n              <Form.Item\n                name={'gender'}\n                rules={[\n                  { required: true, message: 'Please input your username!' },\n                ]}\n              >\n                <Select placeholder={PLACEHOLDER}>\n                  <Select.Option value=\"Male\">Male</Select.Option>\n                  <Select.Option value=\"Female\">Female</Select.Option>\n                  <Select.Option value=\"Unspecified\">Unspecified</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={4}>\n              <Form.Item name={'age'}>\n                <Select placeholder={PLACEHOLDER}>\n                  {new Array(120).fill(undefined).map((_, i) => (\n                    <Select.Option key={i} value={i}>\n                      {i}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Input.Group>\n\n        <Input.Group size=\"large\">\n          <Row gutter={8}>\n            <Col span={16}>\n              <Form.Item name=\"email\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={4}>\n              <Form.Item name={'country'}>\n                <Select placeholder={PLACEHOLDER}>\n                  {countries.map((country) => (\n                    <Select.Option key={country} value={country}>\n                      {country}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={4}>\n              <Form.Item name={'city'}>\n                <Select placeholder={PLACEHOLDER}>\n                  {cities.map((city) => (\n                    <Select.Option key={city} value={city}>\n                      {city}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Input.Group>\n\n        <Typography.Title level={5}>Input CSV Data</Typography.Title>\n\n        <CSVFileInput setData={setData} />\n        <CSVManualInput setData={setData} />\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" disabled={data.length === 0}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Bar } from '@ant-design/charts';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../../store';\nimport { ParsedCSV } from '../../store/reducers/form';\n\ninterface ChartData {\n  product: string;\n  value: number;\n}\n\nconst convertToChartData = (input: ParsedCSV): ChartData[] => {\n  return input.map((row) => ({\n    product: row.data[0],\n    value: parseFloat(row.data[1]) || 0,\n  }));\n};\n\nexport const ProductChart = () => {\n  const data = useSelector((state: AppState) => state.form.data);\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  const convertedData = convertToChartData(data);\n\n  const config = {\n    data: convertedData,\n    autoFit: true,\n    yField: 'product',\n    xField: 'value',\n    point: {\n      size: 5,\n      shape: 'diamond',\n    },\n    label: {\n      style: {\n        fill: '#aaa',\n      },\n    },\n  };\n\n  let chart: any;\n\n  return (\n    <Bar {...config} onReady={(chartInstance) => (chart = chartInstance)} />\n  );\n};\n","import { Table } from 'antd';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components/macro';\nimport { AppState } from '../../store';\nimport { ParsedCSV } from '../../store/reducers/form';\n\ntype TableData = {\n  key: number;\n  product: string;\n  price: string;\n};\n\nconst columns = [\n  {\n    title: 'Product',\n    dataIndex: 'product',\n    key: 'product',\n  },\n  {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price',\n    // TODO - verify sorting and filtering\n    sorter: (a: TableData, b: TableData) =>\n      parseFloat(a.price) - parseFloat(b.price),\n  },\n];\n\nconst convertToTableData = (input: ParsedCSV): TableData[] => {\n  return input.map((row, i) => ({\n    key: i,\n    product: row.data[0],\n    price: row.data[1],\n  }));\n};\n\nconst Container = styled.div`\n  margin-top: 1rem;\n`;\n\nexport const ProductTable = () => {\n  const data = useSelector((state: AppState) => state.form.data);\n\n  return (\n    <Container>\n      <Table\n        dataSource={convertToTableData(data)}\n        showHeader={false}\n        columns={columns}\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components/macro';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst Container = styled.div`\n  margin: 1rem 1rem 0 1rem;\n  padding-bottom: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #ccc;\n`;\n\ninterface UserFactProps {\n  label: string;\n  value: string;\n}\n\nexport const UserFact: React.FC<UserFactProps> = ({ label, value }) => {\n  return (\n    <Container>\n      <Text strong>{label}</Text>\n      <Text>{value}</Text>\n    </Container>\n  );\n};\n","import { Col, Row } from 'antd';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components/macro';\nimport { ProductChart } from './ProductChart';\nimport { ProductTable } from './ProductTable';\nimport { UserFact } from './UserFact';\n\nconst PageContainer = styled.div`\n  padding: 1rem;\n  background-color: #fff;\n`;\n\nexport const DataOutput = () => {\n  const { name, email, gender, country, age, city } = useSelector(\n    (state: any) => state.form\n  );\n\n  return (\n    <PageContainer>\n      <Row>\n        <Col span={12}>\n          <UserFact label={'Name'} value={name} />\n        </Col>\n        <Col span={12}>\n          <UserFact label={'E-Mail'} value={email} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12}>\n          <UserFact label={'Gender'} value={gender} />\n        </Col>\n        <Col span={12}>\n          <UserFact label={'Country'} value={country} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12}>\n          <UserFact label={'Age'} value={age} />\n        </Col>\n        <Col span={12}>\n          <UserFact label={'City'} value={city} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col span={12}>\n          <ProductTable />\n        </Col>\n        <Col span={12}>\n          <ProductChart />\n        </Col>\n      </Row>\n    </PageContainer>\n  );\n};\n","import 'antd/dist/antd.css';\nimport React from 'react';\nimport { Home } from '../pages/Home/Home';\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FormAction, FormActionNames } from '../actions/form';\n\nexport type ParsedCSV = Array<{ data: string[] }>;\n\nexport interface FormState {\n  name: string;\n  gender: string;\n  age: string;\n  email: string;\n  country: string;\n  city: string;\n  data: ParsedCSV;\n}\n\nconst initialState: FormState = {\n  name: '',\n  gender: 'Unspecified',\n  age: '',\n  email: '',\n  country: '',\n  city: '',\n  data: [],\n};\n\nexport const formReducer = (state = initialState, action: FormAction) => {\n  switch (action.type) {\n    case FormActionNames.SUBMIT_FORM_ACTION: {\n      return action.payload;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers, createStore } from 'redux';\n\nimport { formReducer } from './reducers/form';\n\nconst reducers = { form: formReducer };\n\nconst rootReducer = combineReducers(reducers);\n\nconst store = createStore(rootReducer);\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}